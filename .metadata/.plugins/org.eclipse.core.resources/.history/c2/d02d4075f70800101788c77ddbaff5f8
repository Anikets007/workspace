/*
 * package com.example.demo.controller;
 * 
 * import org.springframework.http.HttpStatus; import
 * org.springframework.http.ResponseEntity; import
 * org.springframework.web.bind.annotation.GetMapping; import
 * org.springframework.web.bind.annotation.PathVariable; import
 * org.springframework.web.bind.annotation.RestController;
 * 
 * import com.twilio.Twilio; import com.twilio.rest.api.v2010.account.Message;
 * import com.twilio.type.PhoneNumber;
 * 
 * @RestController public class Controller {
 * 
 * private static final String ACCOUNT_SID =
 * "AC0d1c0106942b24b6645d8217ac5889c3"; private static final String AUTH_TOKEN
 * = "56a888ae7056f1663e3d2e9ead21b689"; private static final String FROM_NUMBER
 * = "+12184801810"; // Twilio Verified Number
 * 
 * static { Twilio.init(ACCOUNT_SID, AUTH_TOKEN); }
 * 
 * @GetMapping("sendSms/{toMobileNo}/{text}") public ResponseEntity<String>
 * sendSMS(@PathVariable("toMobileNo") String toMobileNo,
 * 
 * @PathVariable("text") String text) { try { Message.creator(new
 * PhoneNumber(toMobileNo), new PhoneNumber(FROM_NUMBER), text).create(); return
 * new ResponseEntity<>("Message sent successfully", HttpStatus.OK); } catch
 * (Exception e) { return new ResponseEntity<>("Error sending message: " +
 * e.getMessage(), HttpStatus.BAD_REQUEST); } } }
 */

package com.example.demo.controller;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import com.twilio.Twilio;
import com.twilio.rest.api.v2010.account.Message;
import com.twilio.type.PhoneNumber;

@RestController
public class Controller {
	Map<String, String> otpMap = new HashMap<>();

	@GetMapping("sendSms/{toMobileNo}")
	public ResponseEntity sendSMS(@PathVariable("toMobileNo") String toMobileNo) {

		Twilio.init("AC0d1c0106942b24b6645d8217ac5889c3", "56a888ae7056f1663e3d2e9ead21b689");

		Message.creator(new PhoneNumber(toMobileNo), new PhoneNumber("+12184801810"), generateOtp(toMobileNo)).create();
		return new ResponseEntity("Message sent successfully", HttpStatus.OK);

	}
	

	
	private String generateOtp(String mobileNo) {
		
		Random random = new Random();
		String otp = String.valueOf(random.nextInt(900000)+100000);
		otpMap.put(mobileNo, otp);
		
		return otp;
	}
	
	
	@GetMapping("/validateOtp/{mNo}/{otp}")
	public ResponseEntity validateOtp(@PathVariable("mNo") String mNo, @PathVariable("otp") String otp) {
		
	}
}
